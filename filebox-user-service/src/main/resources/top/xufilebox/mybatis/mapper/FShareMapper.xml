<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.xufilebox.mybatis.mapper.FShareMapper" >
  <resultMap id="BaseResultMap" type="top.xufilebox.mybatis.entity.FShare" >
    <id column="share_id" property="shareId" jdbcType="INTEGER" />
    <result column="from_user_name" property="fromUserName" jdbcType="VARCHAR" />
    <result column="file_id" property="fileId" jdbcType="INTEGER" />
    <result column="hash" property="hash" jdbcType="VARCHAR" />
    <result column="share_url" property="shareUrl" jdbcType="VARCHAR" />
    <result column="disable" property="disable" jdbcType="INTEGER" />
    <result column="effective_time" property="effectiveTime" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from f_share
    where share_id = #{shareId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.xufilebox.mybatis.entity.FShare" >
    insert into f_share (share_id, from_user_name, file_id, 
      hash, share_url, `disable`, 
      effective_time, update_time, create_time, 
      create_by, update_by)
    values (#{shareId,jdbcType=INTEGER}, #{fromUserName,jdbcType=VARCHAR}, #{fileId,jdbcType=INTEGER}, 
      #{hash,jdbcType=VARCHAR}, #{shareUrl,jdbcType=VARCHAR}, #{disable,jdbcType=INTEGER}, 
      #{effectiveTime,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=INTEGER}, #{updateBy,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="top.xufilebox.mybatis.entity.FShare" >
    update f_share
    set from_user_name = #{fromUserName,jdbcType=VARCHAR},
      file_id = #{fileId,jdbcType=INTEGER},
      hash = #{hash,jdbcType=VARCHAR},
      share_url = #{shareUrl,jdbcType=VARCHAR},
      `disable` = #{disable,jdbcType=INTEGER},
      effective_time = #{effectiveTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_by = #{updateBy,jdbcType=INTEGER}
    where share_id = #{shareId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select share_id, from_user_name, file_id, hash, share_url, `disable`, effective_time, 
    update_time, create_time, create_by, update_by
    from f_share
    where share_id = #{shareId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select share_id, from_user_name, file_id, hash, share_url, `disable`, effective_time, 
    update_time, create_time, create_by, update_by
    from f_share
  </select>
</mapper>